dnpjYmVnIGtvenAsIGtvenBucXFiYSwga296cHRodiwga296cGN5aHR2YSwgYmYKdnpjYmVnIGZ1
aGd2eQp2emNiZWcgbXZjc3Z5cgpzZWJ6IEZnZXZhdFZCIHZ6Y2JlZyBGZ2V2YXRWQgp2emNiZWcg
dG12Ywp2emNiZWcgZXJkaHJmZ2YKdnpjYmVnIHZiCnZ6Y2JlZyBncnpjc3Z5cgp2emNiZWcgZ3Vl
cm5xdmF0CgoKCm5xcWJhX3ZxID0gJ2ZwZXZjZy54cnlyb3J4JwoKdnBiYWNuZ3UgPSBrb3pwLmdl
bmFmeW5nckNuZ3UoYmYuY25ndS53YnZhKCdmY3Jwdm55Oi8vdWJ6ci9ucXFiYWYvJyArIG5xcWJh
X3ZxLCAndnBiYS5jYXQnKSkKCmpxYyA9IGtvenB0aHYuUXZueWJ0Q2VidGVyZmYoKQphdmdyemYg
PSAwCmF2Z3J6ID0gMAoKcXJzIGZ1YmphYmd2c2woenJmZm50cixmcnBiYXFmKToKCWtvenAucmty
cGhncm9odnlndmEoJ0tPWlAuQWJndnN2cG5ndmJhKCVmLCAlZiwgJWYsICVmKScgJSAoJ1hSWVJP
UlgnICwgenJmZm50ciwgZmdlKGZycGJhcWYpLCB2cGJhY25ndSkpCgpxcnMgZ3Vlcm5xYWJndnNs
KHpyZmZudHIsZnJwYmFxZik6CglxYWJndnNsZ3Vlcm5xID0gZ3Vlcm5xdmF0Lkd1ZXJucShnbmV0
cmc9ZnViamFiZ3ZzbCxuZXRmPSh6cmZmbnRyLGZycGJhcWYpKQoJcWFiZ3ZzbGd1ZXJucS5mZ25l
ZygpICAjIC4uLkZnbmVnIGd1ciBndWVybnEsIHZhaWJ4ciBndXIgZWhhIHpyZ3VicQoKcXJzIG12
Y3F2ZShjbmd1LCBtdmN1KToKCXR5Ym9ueSBqcWMKCXR5Ym9ueSBhdmdyegoJdHlib255IGF2Z3J6
ZgoJZ2VsOgoJCSMgbXZjdSB2ZiBtdmNzdnlyIHVuYXF5cgoJCXNiZSBlYmJnLCBxdmVmLCBzdnly
ZiB2YSBiZi5qbnl4KGNuZ3UpOgoJCQkja296cC55YnQoJ1slZl0gJWYgJWYgJWYnICUgKCdFQkJH
OicsIGViYmcsIHF2ZWYsIHN2eXJmKSwgMikKCQkJc2JlIHN2eXIgdmEgc3Z5cmY6CgkJCQl2cyAo
IGpxYy52ZnBuYXByeXJxKCkgKTogCgkJCQkJZXJnaGVhCgkJCQlhdmdyeiA9IGF2Z3J6ICsgMQoJ
CQkJY2VidGVyZmYgPSBhdmdyeiAvIHN5Ym5nKGF2Z3J6ZikgKiAxMDAgIAoJCQkJanFjLmhjcW5n
cih2YWcoY2VidGVyZmYpLCJQYmN2bmFxYiAiLCdbUEJZQkUgZXJxXSVmWy9QQllCRV0nJXN2eXIs
ICdDYmUgc25pYmUsIHJmY3Jlbi4uLicpCgkJCQl2cyAoIGJmLmNuZ3Uucmt2ZmdmKGJmLmNuZ3Uu
d2J2YShlYmJnLCBzdnlyKSkgKToKCQkJCQkja296cC55YnQoJ1slZl0gJWYnICUgKCdTVllSOics
IHN2eXIpLCAyKQoJCQkJCW12Y3UuamV2Z3IoYmYuY25ndS53YnZhKGViYmcsIHN2eXIpKQoJCQkJ
cnlmcjoKCQkJCQlrb3pwLnlidCgnWyVmXSAlZiAlZiAlZicgJSAoJ1NWWVIgQUJHIFJLVkZHRjon
LCBlYmJnLCBxdmVmLCBzdnlyKSwgMikKCXJrcHJjZyBSa3ByY2d2YmEsIHI6CgkJa296cC55YnQo
J1slZl0gJWYnICUgKCdSS1BSQ0dWQkE6JywgZmdlKHIpKSwgMikKCQlrb3pwLnJrcnBoZ3JvaHZ5
Z3ZhKCdBYmd2c3Zwbmd2YmEoJWYsICVmKSclKCdSRUVCRTonLGZnZShyKSkpCgoKCnF2bnlidCA9
IGtvenB0aHYuUXZueWJ0KCkKYXF2ZSA9IHF2bnlidC5vZWJqZnIoMywgJ1hSWVJPUlgnLCAiIiku
cXJwYnFyKCJoZ3MtOCIpCmtvenAueWJ0KCdbJWZdICVmJyAlICgnUVZFOicsIGFxdmUpLCAyKQpn
ZWw6Cgl2cyAoIGFxdmUgIT0gJycgKToKCQkja296cC55YnQoJ1slZl0gJWYnICUgKCdNVkM6Jywg
YmYuY25ndS53YnZhKGFxdmUsJ09ucHhoYycpKSwgMikKCQkjZnVoZ3Z5LnpueHJfbmVwdXZpcihi
Zi5jbmd1LndidmEoYXF2ZSwnT25weGhjLm12YycpLCAnbXZjJywga296cC5nZW5hZnluZ3JDbmd1
KCdmY3Jwdm55Oi8vdWJ6ci9ucXFiYWYvJykpCgkJbXZjcyA9IG12Y3N2eXIuTXZjU3Z5cihiZi5j
bmd1LndidmEoYXF2ZSwnT25weGhjX1hZTy5tdmMnKSwgJ2onLCBtdmNzdnlyLk1WQ19RUlNZTkdS
USkKCQliZi5wdXF2ZShrb3pwLmdlbmFmeW5nckNuZ3UoJ2ZjcnB2bnk6Ly91YnpyJykpCgkJanFj
LnBlcm5ncigiT05QWEhDIFhSWVJPUlgiLCdQYmFnbmFxYiBBaHpyZWIgcXIgTmVwdXZpYmYuIENi
ZSBzbmliZSwgcmZjcmVyLi4uJykKCQlqcWMuaGNxbmdyKDApCgkJYXZncnpmID0gMAoJCWF2Z3J6
ID0gMAoJCXNiZSBvbmZyLCBxdmVmLCBzdnlyZiB2YSBiZi5qbnl4KCcuL25xcWJhZi8nKToKCQkJ
c2JlIHN2eXIgdmEgc3Z5cmY6CgkJCQlhdmdyemYgPSBhdmdyemYgKyAxCgkJc2JlIG9uZnIsIHF2
ZWYsIHN2eXJmIHZhIGJmLmpueXgoJy4vaGZyZXFuZ24vJyk6CgkJCXNiZSBzdnlyIHZhIHN2eXJm
OgoJCQkJYXZncnpmID0gYXZncnpmICsgMQoJCW12Y3F2ZSgnLi9ucXFiYWYvJywgbXZjcykKCQl2
cyAoIGFiZyBqcWMudmZwbmFwcnlycSgpICk6IAoJCQltdmNxdmUoJy4vaGZyZXFuZ24vJywgbXZj
cykKCQltdmNzLnB5YmZyKCkKCQlqcWMucHliZnIoKQoJCXZzICggYWJnIGpxYy52ZnBuYXByeXJx
KCkgKToKCQkJZ3Vlcm5xYWJndnNsKCdPTlBYSEMgU1ZBVkZVUlEnLDQwMDApCgkJCXF2bnlidC5i
eCgnT05QWEhDIFNWQVZGVVJRJywgJ1tQQllCRSBscnl5YmpdUGJjdm4gZXJueXZtbnFuOlsvUEJZ
QkVdIFtQQllCRSBveWhyXScgKyBmZ2UoYXZncnpmKSArICdbL1BCWUJFXSBbUEJZQkUgbHJ5eWJq
XU5lcHV2aWJmIHBiY3ZucWJmLlsvUEJZQkVdJywgJycsJycpCgkJcnlmcjoKCQkJcXZueWJ0LmJ4
KCdPTlBYSEMgUE5BUFJZTlFCJywgJ1tQQllCRSBscnl5YmpdT25weGhjIHBuYXByeW5xYlsvUEJZ
QkVdJywgJycsJycpCnJrcHJjZyBSa3ByY2d2YmEsIHI6Cglrb3pwLnlidCgnWyVmXSAlZicgJSAo
J1JLUFJDR1ZCQTonLCBmZ2UocikpLCAyKQoJa296cC5ya3JwaGdyb2h2eWd2YSgnQWJndnN2cG5n
dmJhKCVmLCAlZiknJSgnUkVFQkU6JyxmZ2UocikpKQoK
